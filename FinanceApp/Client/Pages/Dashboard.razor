@page "/Dashboard"
@inject HttpClient _client
@inject NavigationManager _navigation

<h3>Dashboard</h3>

<TickerSearchBar OnSearch="OnSearch" />

@if (Stock != null)
{
    <StockDetail Stock="Stock" />
}

<StockChart @ref="Chart" Finances="Finances"/>

@if (Articles != null)
{
    <StockArticles Articles="Articles" />
}

@code {
    
    public StockDTO? Stock { get; set; }
    public PolygonArticleDTO? Articles { get; set; }
    public List<StockFinanceDTO>? Finances { get; set; }
    [Parameter] public StockChart Chart { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    public async Task OnSearch(string ticker)
    {
        await GetStockDetail(ticker);
        await GetArticles(ticker);
        await GetFinances(ticker);

        Chart.Chart.Refresh();

        StateHasChanged();
    }

    public async Task GetStockDetail(string? ticker)
    {
        if (ticker != null)
        {
            try
            {
                Stock = await _client.GetFromJsonAsync<StockDTO>($"api/stocks/{ticker}");
            }
            catch (Exception)
            {
                Console.WriteLine("Not found or polygon api doesn't response");
            }
        }
        else
        {
            Stock = null;
        }
        await InvokeAsync(StateHasChanged);
    }

    public async Task GetArticles(string? ticker)
    {
        if (ticker != null)
        {
            try
            {
                Articles = await _client.GetFromJsonAsync<PolygonArticleDTO>($"api/stocks/{ticker}/getarticles");
            }
            catch (Exception)
            {
                Console.WriteLine("Polygon api doesn't response");
            }
        }
        else
        {
            Articles = null;
        }
        await InvokeAsync(StateHasChanged);
    }

    public async Task GetFinances(string? ticker)
    {
        if (ticker != null)
        {
            try
            {
                var dto = await _client.GetFromJsonAsync<PolygonFinanceDTO>($"api/stocks/{ticker}/getfinances");

                var tmp = dto.Finances.Select(finance => new StockFinanceDTO
                {
                    C = finance.ClosePrice, H = finance.HighestPrice, L = finance.LowestPrice, O = finance.OpenPrice, V = finance.Volume, T = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc).AddMilliseconds(finance.Timestamp).ToLocalTime()
                }).ToList();

                Finances = tmp;
                //
                // foreach (var halo in tmp)
                // {
                //     Console.WriteLine(halo.T);
                // }
                
            }
            catch (Exception)
            {
                Console.WriteLine("Polygon api doesn't response");
            }
        }
        else
        {
            Stock = null;
        }
        await InvokeAsync(StateHasChanged);
    }

}
